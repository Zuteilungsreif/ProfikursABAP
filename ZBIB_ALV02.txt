*&---------------------------------------------------------------------*
*& Report  ZBIB_ALV02                                                  *
*&---------------------------------------------------------------------*

* Bitte beachten Sie, dass dieser Report ein Dynpro 100 benötigt,
* wie im Buch beschrieben.
* Falls Sie diesen Report per Copy & Paste übertragen haben,
* müssen Sie Dynpro und GUI Status gemäß den Vorgaben
* noch zusäzlich manuell anlegen

REPORT  zbib_alv02.

TABLES zbibverlage.

DATA   ok_code LIKE sy-ucomm.
DATA: cont1 TYPE REF TO cl_gui_custom_container,
     alv1 TYPE REF TO cl_gui_alv_grid.

DATA it_verlag TYPE STANDARD TABLE OF zbibverlage.

START-OF-SELECTION.

  SELECT * FROM zbibverlage INTO TABLE it_verlag.
  CALL SCREEN 100.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS 'LEISTE'.
  IF cont1 IS INITIAL.
    CREATE OBJECT cont1
      EXPORTING container_name = 'CONT1'.
  ENDIF.
  IF alv1 IS INITIAL.
    CREATE OBJECT alv1
      EXPORTING i_parent = cont1.

    CALL METHOD alv1->set_table_for_first_display
      EXPORTING
        i_structure_name = 'ZBIBVERLAGE'
      CHANGING
        it_outtab        = it_verlag.

    DATA layout TYPE lvc_s_layo.

    CALL METHOD alv1->get_frontend_layout
      IMPORTING
        es_layout = layout.

    CLASS cl_gui_cfw DEFINITION LOAD.

    CALL METHOD cl_gui_cfw=>flush.

    layout-cwidth_opt = 'X'.
    layout-no_headers = 'X'.
    layout-no_hgridln = 'X'.
    layout-no_vgridln = 'X'.
    layout-no_toolbar = 'X'.
    layout-zebra = ' '.

    CALL METHOD alv1->set_frontend_layout
      EXPORTING
        is_layout = layout.

  ENDIF.
ENDMODULE.                 " STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  CASE ok_code.
    WHEN 'EXIT'.
      CALL METHOD alv1->free.
      CALL METHOD cont1->free.
      FREE cont1.
      FREE alv1.
      LEAVE PROGRAM.
  ENDCASE.
ENDMODULE.                 " USER_COMMAND_0100  INPUT